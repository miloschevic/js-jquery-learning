var request;																			// последнее запрошенное изображение
var $current;																			// текущее изображение
var cache = {};																		// объект cache
var $frame = $('#photo-viewer');									// контейнер для изображения
var $thumbs = $('.thumb');												// контейнер для эскизов

function crossfade($img) {												// функция для плавного перехода между изображениями
																									// передаём новое изображение в качестве параметра если изображение сейчас выводится 
	if ($current) {																	
		$current.stop().fadeOut('slow');							// останавливаем анимацию и плавно его скрываем
	}

	$img.css({																			// задаём для изображения поля с помощью CSS
		marginLeft: -$img.width() / 2,								// отрицательное значение поля в половину ширины
		marginTop: -$img.height() / 2									// отрицательное значение поля в половину высоты
	});

	$img.stop().fadeTo('slow', 1);									// останавливаем анимацию нового изображения и плавно его выводим
	

	$current = $img;																// новое изображение становится текущим

}

$(document).on('click', '.thumb', function(e) {		// при щелчке по эскизу
	var $img;																				// создаём локальную переменную $img
	var src = this.href;														// сохраняем путь к изображению
	request = src;																	// сохраняем последнее запрошенное изображение

	e.preventDefault();															// отменяем стандартное поведение ссылки

	$thumbs.removeClass('active');									// удаляем класс active из всех эскизов
	$(this).addClass('active');											// добавляем класс active к нажатому эскизу

	if (cache.hasOwnProperty(src)) {								// если cache содержит это изображение
		if (cache[src].isLoading === false) {					// и если isLoading равно false
			crossfade(cache[src].$img);									// вызываем функцию crossfade()
		}
	} else {																				// если его нет внутри cache
		$img = $('<img/>');														// сохраняем пустой элемент <img/> в $img
		cache[src] = {																// сохраняем это изображение в cache
			$img: $img,																	// добавляем путь к изображению
			isLoading: true															// присваиваем isLoading значение false
		};

		// следующие несколько строк подготовлены заранее, но запустятся после загрузки изображения
		$img.on('load', function() {									// после загрузки изображения
			$img.hide();																// скрываем его
																									// удаляем класс is-loading из контейнера и добавляем в него новое изображение
	    $frame.removeClass('is-loading').append($img);
	    cache[src].isLoading = false;								// обновляем is-loading внутри cache
	    																						// если это последнее запрошенное изображение
	    if (request === src) {											
	    	crossfade($img);													// вызываем функцию crossfade()
	    }																						// решаем проблему с асинхронной загрузкой
		});

		$frame.addClass('is-loading');								// добавляем в контейнер класс is-loading

		$img.attr({																		// назначаем атрибуты элементу img
			'src': src,																	// добавляем атрибут src для загрузки изображения
			'alt': this.title || ''											// добавляем заголовок, если таковой был в ссылке
		});

	}

});

// последняя строка запускается сразу после загрузки остальной части сценария и выводит первое изображение
$('.thumb').eq(0).click();												// эмулируем щелчок по эскизу